/*----- PROTECTED REGION ID(StarterStateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id$";
//=============================================================================
//
// file :        StarterStateMachine.cpp
//
// description : C++ source for the «name» and its alowed
//               methods for commands and attributes
//
// project :     Starter for Tango Administration.
//
// $Author$
//
// Copyright (C) :      2004,2005,2006,2007,2008,2009,2010
//						European Synchrotron Radiation Facility
//                      BP 220, Grenoble 38043
//                      FRANCE
//
// This file is part of Tango.
//
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
//
// $Revision$
// $Date$
//
// SVN only:
// $HeadURL:  $
//
// CVS only:
// $Source$
// $Log$
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================



#include <Starter.h>
#include <StarterClass.h>

/*----- PROTECTED REGION END -----*/


/*
 * Starter states description:
 *
 * UNKNOWN :	This device server has NOT been correctly initialised. 
 * ON :	All controlled servers are running. 
 * ALARM :	At least one controled device server is not running. 
 * MOVING :	The Sarter is starting servers. 
 */

namespace Starter_ns
{

//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : Starter::is_NotifdStateState_allowed()
 *	Description : Execution allowed for NotifdState attribute.
 */
//--------------------------------------------------------

bool Starter::is_NotifdState_allowed(Tango::AttReqType type)
{
		//	Not any excluded states for NotifdState attribute in READ access.
	
	/*----- PROTECTED REGION ID(Starter::read_NotifdStateStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::read_NotifdStateStateAllowed_READ

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Starter::is_HostStateState_allowed()
 *	Description : Execution allowed for HostState attribute.
 */
//--------------------------------------------------------

bool Starter::is_HostState_allowed(Tango::AttReqType type)
{
		//	Not any excluded states for HostState attribute in READ access.
	
	/*----- PROTECTED REGION ID(Starter::read_HostStateStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::read_HostStateStateAllowed_READ

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Starter::is_RunningServersState_allowed()
 *	Description : Execution allowed for RunningServers attribute.
 */
//--------------------------------------------------------

bool Starter::is_RunningServers_allowed(Tango::AttReqType type)
{
		//	Not any excluded states for RunningServers attribute in READ access.
	
	/*----- PROTECTED REGION ID(Starter::read_RunningServersStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::read_RunningServersStateAllowed_READ

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Starter::is_StoppedServersState_allowed()
 *	Description : Execution allowed for StoppedServers attribute.
 */
//--------------------------------------------------------

bool Starter::is_StoppedServers_allowed(Tango::AttReqType type)
{
		//	Not any excluded states for StoppedServers attribute in READ access.
	
	/*----- PROTECTED REGION ID(Starter::read_StoppedServersStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::read_StoppedServersStateAllowed_READ

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Starter::is_ServersState_allowed()
 *	Description : Execution allowed for Servers attribute.
 */
//--------------------------------------------------------

bool Starter::is_Servers_allowed(Tango::AttReqType type)
{
		//	Not any excluded states for Servers attribute in READ access.
	
	/*----- PROTECTED REGION ID(Starter::read_ServersStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::read_ServersStateAllowed_READ

	return true;
}


	/*----- PROTECTED REGION ID(Starter::are_dynamic_attributes_allowed) ENABLED START -----*/

	//	Add your code to check if dynamic attributes are alowed

	/*----- PROTECTED REGION END -----*/	//	Starter::are_dynamic_attributes_allowed


//=================================================
//		Commands Allowed Methods
//=================================================


//--------------------------------------------------------
/**
 *	Method      : Starter::is_DevStartAllState_allowed()
 *	Description : Execution allowed for DevStartAll command.
 */
//--------------------------------------------------------

bool Starter::is_DevStartAll_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for DevStartAll command.

	/*----- PROTECTED REGION ID(Starter::DevStartAllStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::DevStartAllStateAllowed

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Starter::is_DevStopAllState_allowed()
 *	Description : Execution allowed for DevStopAll command.
 */
//--------------------------------------------------------

bool Starter::is_DevStopAll_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for DevStopAll command.

	/*----- PROTECTED REGION ID(Starter::DevStopAllStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::DevStopAllStateAllowed

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Starter::is_DevGetRunningServersState_allowed()
 *	Description : Execution allowed for DevGetRunningServers command.
 */
//--------------------------------------------------------

bool Starter::is_DevGetRunningServers_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for DevGetRunningServers command.

	/*----- PROTECTED REGION ID(Starter::DevGetRunningServersStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::DevGetRunningServersStateAllowed

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Starter::is_DevGetStopServersState_allowed()
 *	Description : Execution allowed for DevGetStopServers command.
 */
//--------------------------------------------------------

bool Starter::is_DevGetStopServers_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for DevGetStopServers command.

	/*----- PROTECTED REGION ID(Starter::DevGetStopServersStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::DevGetStopServersStateAllowed

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Starter::is_DevStartState_allowed()
 *	Description : Execution allowed for DevStart command.
 */
//--------------------------------------------------------

bool Starter::is_DevStart_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for DevStart command.

	/*----- PROTECTED REGION ID(Starter::DevStartStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::DevStartStateAllowed

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Starter::is_DevStopState_allowed()
 *	Description : Execution allowed for DevStop command.
 */
//--------------------------------------------------------

bool Starter::is_DevStop_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for DevStop command.

	/*----- PROTECTED REGION ID(Starter::DevStopStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::DevStopStateAllowed

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Starter::is_DevReadLogState_allowed()
 *	Description : Execution allowed for DevReadLog command.
 */
//--------------------------------------------------------

bool Starter::is_DevReadLog_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for DevReadLog command.

	/*----- PROTECTED REGION ID(Starter::DevReadLogStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::DevReadLogStateAllowed

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Starter::is_HardKillServerState_allowed()
 *	Description : Execution allowed for HardKillServer command.
 */
//--------------------------------------------------------

bool Starter::is_HardKillServer_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for HardKillServer command.

	/*----- PROTECTED REGION ID(Starter::HardKillServerStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::HardKillServerStateAllowed

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Starter::is_NotifyDaemonStateState_allowed()
 *	Description : Execution allowed for NotifyDaemonState command.
 */
//--------------------------------------------------------

bool Starter::is_NotifyDaemonState_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for NotifyDaemonState command.

	/*----- PROTECTED REGION ID(Starter::NotifyDaemonStateStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::NotifyDaemonStateStateAllowed

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Starter::is_UpdateServersInfoState_allowed()
 *	Description : Execution allowed for UpdateServersInfo command.
 */
//--------------------------------------------------------

bool Starter::is_UpdateServersInfo_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for UpdateServersInfo command.

	/*----- PROTECTED REGION ID(Starter::UpdateServersInfoStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Starter::UpdateServersInfoStateAllowed

	return true;
}


	/*----- PROTECTED REGION ID(Starter::are_dynamic_commands_allowed) ENABLED START -----*/

	//	Add your code to check if dynamic commands are alowed

	/*----- PROTECTED REGION END -----*/	//	Starter::are_dynamic_commands_allowed

}	// namespace Starter_ns
